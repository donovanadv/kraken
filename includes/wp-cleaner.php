<?php
/**
 * Hide Posts from admin
 */
function kraken_disable_posts_admin_menu() {
    remove_menu_page('edit.php');
}
add_action('admin_menu', 'kraken_disable_posts_admin_menu'); // remove posts link from admin menu
function kraken_disable_posts_admin_bar() {
    global $wp_admin_bar;
    $wp_admin_bar->remove_menu('new-post');
}
add_action('wp_before_admin_bar_render', 'kraken_disable_posts_admin_bar'); // remove new post link from admin bar

/**
 * Disable archive pages for Posts
 */
function kraken_disable_post_archives($query){
    if((!is_front_page() && is_home()) || is_category() || is_tag() || is_author() || is_date()) {
        global $wp_query;
        $wp_query->set_404();
        status_header(404);
        nocache_headers();
    }
}
add_action('parse_query', 'kraken_disable_post_archives');

/**
 * Unregister default taxonomies for Posts
 */
function kraken_unregister_default_taxonomies() {
    unregister_taxonomy_for_object_type('category', 'post'); // unregister categories for posts
    unregister_taxonomy_for_object_type('post_tag', 'post'); // unregister tags for posts
}
add_action('init', 'kraken_unregister_default_taxonomies');

// Disable Dashicons on Front-end
function wpdocs_dequeue_dashicon() {
    if (current_user_can( 'update_core' )) {
        return;
    }
    wp_deregister_style('dashicons');
}
add_action( 'wp_enqueue_scripts', 'wpdocs_dequeue_dashicon' );

//Disable Self Pingback
function disable_pingback( &$links ) {
    foreach ( $links as $l => $link )
    if ( 0 === strpos( $link, get_option( 'home' ) ) )
    unset($links[$l]);
}
   add_action( 'pre_ping', 'disable_pingback' );

/**
 * Dequeue WP Block Editor styles
 */
function kraken_dequeue_block_styles(){
    wp_dequeue_style('wp-block-library');
}
add_action('wp_enqueue_scripts', 'kraken_dequeue_block_styles', 100);

/**
 * Mitigate information leakage vulnerability
 */
remove_action( 'wp_head', 'wp_generator' ) ;

/**
 * This file removes and cleans up the unnecessary files generated by wp by default.
 */
add_action('admin_bar_menu', 'kraken_disable_comments_admin_bar', 999); // remove comments links from admin bar
add_action('admin_menu', 'kraken_disable_comments_admin_menu'); // remove comments and discussion settings from admin menu
add_action('admin_init', 'kraken_disable_comments_post_types_support'); // disable support for comments and trackbacks for all post types
add_filter('comments_open', '__return_false', 20); // close comments
add_filter('pings_open', '__return_false', 20); // close pings
add_filter('comments_array', '__return_empty_array'); // return empty comments array
add_action('admin_init', 'kraken_disable_comments_admin_redirect'); // redirect any user trying to access comments page
add_action('admin_init', 'kraken_disable_comments_dashboard'); // remove comments metabox from dashboard

/**
 * Remove oEmbed discovery links and REST API endpoint
 */
remove_action('wp_head', 'wp_oembed_add_discovery_links');
remove_action('rest_api_init', 'wp_oembed_register_route');

/**
 * https://www.webdesignvista.com/remove-unnecessary-scripts-from-header-in-wordpress/
 * Remove unnecessary header code
 */
remove_action('wp_head', 'rsd_link'); // remove RSD link used by blog clients
remove_action('wp_head', 'wlwmanifest_link'); // remove Windows Live Writer client link
remove_action('wp_head', 'wp_shortlink_wp_head'); // remove shortlink
remove_action('wp_head', 'wp_generator'); // remove generator meta tag
remove_action('wp_head', 'adjacent_posts_rel_link'); // displays the relational links for the posts adjacent to the current post

/**
 * Rss Feed Links
 */
remove_action('wp_head', 'feed_links', 2); 
remove_action('wp_head', 'feed_linkraken_extra', 3); 

/**
 * Disable WordPress emojis
 */
remove_action('wp_head', 'print_emoji_detection_script', 7);
remove_action('admin_print_scripts', 'print_emoji_detection_script');
remove_action('wp_print_styles', 'print_emoji_styles');
remove_action('admin_print_styles', 'print_emoji_styles');
remove_filter('the_content_feed', 'wp_staticize_emoji');
remove_filter('comment_text_rss', 'wp_staticize_emoji');
remove_filter('wp_mail', 'wp_staticize_emoji_for_email');
add_filter('emoji_svg_url', '__return_false', 10, 2);

/**
 * Disable comments & Pings & Trackbacks
 */
function kraken_disable_comments_post_types_support() {
    $post_types = get_post_types();
    foreach ($post_types as $post_type) {
        if (post_type_supports($post_type, 'comments')) {
            remove_post_type_support($post_type, 'comments');
            remove_post_type_support($post_type, 'trackbacks');
        }
    }
}
function kraken_disable_comments_admin_menu() {
    remove_menu_page('edit-comments.php');
    remove_submenu_page('options-general.php', 'options-discussion.php');
}
function kraken_disable_comments_admin_bar($wp_admin_bar) {
    $wp_admin_bar->remove_node('comments');
}
function kraken_disable_comments_admin_redirect() {
    global $pagenow;
    if ($pagenow == 'edit-comments.php' || $pagenow == 'options-discussion.php') {
        wp_redirect(admin_url());
        exit;
    }
}
function kraken_disable_comments_dashboard() {
    remove_meta_box('dashboard_recent_comments', 'dashboard', 'normal');
}

/**
 * Remove Site Icon control from Theme Customization
 */
function kraken_customize_register($wp_customize) {
    $wp_customize->remove_control('site_icon');
}
add_action('customize_register', 'kraken_customize_register', 20);  


/**
 * Disable search
 */
function kraken_disable_search($query, $error = true) {
    if (is_search() && !is_admin()) {
        $query->is_search = false;
        $query->query_vars[s] = false;
        $query->query[s] = false;

        if ($error == true) {
            $query->is_404 = true;
        }
    }
}
add_action('parse_query', 'kraken_disable_search');
add_filter('get_search_form', '__return_null');


function kraken_tinymce_disable_emojis($plugins) {
    if (is_array($plugins)) {
        return array_diff($plugins, array('wpemoji'));
    } else {
        return array();
    }
}
add_filter('tiny_mce_plugins', 'kraken_tinymce_disable_emojis'); // disable wpemoji TinyMCE plugin


/**
 * Enable TinyMCE paste as text by default
 */
function kraken_tinymce_paste_as_text($init) {
    $init['paste_as_text'] = true;
    
    return $init;
}
add_filter('tiny_mce_before_init', 'kraken_tinymce_paste_as_text');